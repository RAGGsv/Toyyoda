//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace toyoda.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TOYYODABDEntities : DbContext
    {
        public TOYYODABDEntities()
            : base("name=TOYYODABDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ciudad> ciudad { get; set; }
        public virtual DbSet<cliente> cliente { get; set; }
        public virtual DbSet<correo> correo { get; set; }
        public virtual DbSet<direccion> direccion { get; set; }
        public virtual DbSet<documento> documento { get; set; }
        public virtual DbSet<estadoCliente> estadoCliente { get; set; }
        public virtual DbSet<pais> pais { get; set; }
        public virtual DbSet<persona> persona { get; set; }
        public virtual DbSet<sucursal> sucursal { get; set; }
        public virtual DbSet<telefono> telefono { get; set; }
        public virtual DbSet<tipoCliente> tipoCliente { get; set; }
        public virtual DbSet<tipoDocumento> tipoDocumento { get; set; }
        public virtual DbSet<usuario> usuario { get; set; }
    
        public virtual ObjectResult<ConsultarPaises_Result> ConsultarPaises()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPaises_Result>("ConsultarPaises");
        }
    
        public virtual int sp_RegistrarUsuario(string correo, string clave, ObjectParameter registrado, ObjectParameter mensaje)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistrarUsuario", correoParameter, claveParameter, registrado, mensaje);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ValidarUsuario(string correo, string clave)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ValidarUsuario", correoParameter, claveParameter);
        }
    }
}
